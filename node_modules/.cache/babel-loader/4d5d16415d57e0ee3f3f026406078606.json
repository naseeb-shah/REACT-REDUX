{"ast":null,"code":"import $$observable from 'symbol-observable';\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\n\nvar ActionTypes = {\n  INIT: '@@redux/INIT' + Math.random().toString(36).substring(7).split('').join('.'),\n  REPLACE: '@@redux/REPLACE' + Math.random().toString(36).substring(7).split('').join('.')\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\n\n\nfunction isPlainObject(obj) {\n  if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error('You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected the listener to be a function.');\n    }\n\n    if (isDispatching) {\n      throw new Error('You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error('You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer;\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if ((typeof observer === 'undefined' ? 'undefined' : _typeof(observer)) !== 'object' || observer === null) {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\n\n\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionDescription = actionType && 'action \"' + String(actionType) + '\"' || 'an action';\n  return 'Given ' + actionDescription + ', reducer \"' + key + '\" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state. ' + 'If you want this reducer to hold no value, you can return null instead of undefined.';\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return 'The ' + argumentName + ' has unexpected type of \"' + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + '\". Expected argument to be an object with the following ' + ('keys: \"' + reducerKeys.join('\", \"') + '\"');\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('\"' + unexpectedKeys.join('\", \"') + '\" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('\"' + reducerKeys.join('\", \"') + '\". Unexpected keys will be ignored.');\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined. If you don\\'t want to set a value for this reducer, ' + 'you can use null instead of undefined.');\n    }\n\n    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');\n\n    if (typeof reducer(undefined, {\n      type: type\n    }) === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined when probed with a random type. ' + ('Don\\'t try to handle ' + ActionTypes.INIT + ' or other actions in \"redux/*\" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined, but can be null.');\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning('No reducer provided for key \"' + key + '\"');\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers);\n  var unexpectedKeyCache = void 0;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError = void 0;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments[1];\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass a single function as the first argument,\n * and get a function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if ((typeof actionCreators === 'undefined' ? 'undefined' : _typeof(actionCreators)) !== 'object' || actionCreators === null) {\n    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators === 'undefined' ? 'undefined' : _typeof(actionCreators)) + '. ' + 'Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?');\n  }\n\n  var keys = Object.keys(actionCreators);\n  var boundActionCreators = {};\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\n\n\nfunction compose() {\n  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(undefined, arguments));\n    };\n  });\n}\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      var store = createStore.apply(undefined, args);\n\n      var _dispatch = function dispatch() {\n        throw new Error('Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(undefined, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(undefined, chain)(store.dispatch);\n      return _extends({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning(\"You are currently using minified code outside of NODE_ENV === 'production'. \" + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { createStore, combineReducers, bindActionCreators, applyMiddleware, compose, ActionTypes as __DO_NOT_USE__ActionTypes };","map":{"version":3,"names":["$$observable","ActionTypes","INIT","Math","random","toString","substring","split","join","REPLACE","_typeof","Symbol","iterator","obj","constructor","prototype","_extends","Object","assign","target","i","arguments","length","source","key","hasOwnProperty","call","isPlainObject","proto","getPrototypeOf","createStore","reducer","preloadedState","enhancer","_ref2","undefined","Error","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","slice","getState","subscribe","listener","isSubscribed","push","unsubscribe","index","indexOf","splice","dispatch","action","type","listeners","replaceReducer","nextReducer","observable","_ref","outerSubscribe","observer","TypeError","observeState","next","warning","message","console","error","e","getUndefinedStateErrorMessage","actionType","actionDescription","String","getUnexpectedStateShapeWarningMessage","inputState","reducers","unexpectedKeyCache","reducerKeys","keys","argumentName","match","unexpectedKeys","filter","forEach","assertReducerShape","initialState","combineReducers","finalReducers","process","env","NODE_ENV","finalReducerKeys","shapeAssertionError","combination","state","warningMessage","hasChanged","nextState","_i","_key","previousStateForKey","nextStateForKey","errorMessage","bindActionCreator","actionCreator","apply","bindActionCreators","actionCreators","boundActionCreators","compose","_len","funcs","Array","arg","reduce","a","b","applyMiddleware","middlewares","_len2","args","_key2","store","_dispatch","middlewareAPI","chain","map","middleware","isCrushed","name","__DO_NOT_USE__ActionTypes"],"sources":["C:/Users/arrow/Desktop/Software Topics/React.js/TODO REDX/node_modules/redux/es/redux.js"],"sourcesContent":["import $$observable from 'symbol-observable';\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar ActionTypes = {\n  INIT: '@@redux/INIT' + Math.random().toString(36).substring(7).split('').join('.'),\n  REPLACE: '@@redux/REPLACE' + Math.random().toString(36).substring(7).split('').join('.')\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object' || obj === null) return false;\n\n  var proto = obj;\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n  function getState() {\n    if (isDispatching) {\n      throw new Error('You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected the listener to be a function.');\n    }\n\n    if (isDispatching) {\n      throw new Error('You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.');\n    }\n\n    var isSubscribed = true;\n\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error('You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.');\n      }\n\n      isSubscribed = false;\n\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer;\n    dispatch({ type: ActionTypes.REPLACE });\n  }\n\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if ((typeof observer === 'undefined' ? 'undefined' : _typeof(observer)) !== 'object' || observer === null) {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return { unsubscribe: unsubscribe };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  }\n\n  // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n  dispatch({ type: ActionTypes.INIT });\n\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n}\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionDescription = actionType && 'action \"' + String(actionType) + '\"' || 'an action';\n\n  return 'Given ' + actionDescription + ', reducer \"' + key + '\" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state. ' + 'If you want this reducer to hold no value, you can return null instead of undefined.';\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return 'The ' + argumentName + ' has unexpected type of \"' + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + '\". Expected argument to be an object with the following ' + ('keys: \"' + reducerKeys.join('\", \"') + '\"');\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('\"' + unexpectedKeys.join('\", \"') + '\" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('\"' + reducerKeys.join('\", \"') + '\". Unexpected keys will be ignored.');\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, { type: ActionTypes.INIT });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined. If you don\\'t want to set a value for this reducer, ' + 'you can use null instead of undefined.');\n    }\n\n    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');\n    if (typeof reducer(undefined, { type: type }) === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined when probed with a random type. ' + ('Don\\'t try to handle ' + ActionTypes.INIT + ' or other actions in \"redux/*\" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined, but can be null.');\n    }\n  });\n}\n\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning('No reducer provided for key \"' + key + '\"');\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n  var finalReducerKeys = Object.keys(finalReducers);\n\n  var unexpectedKeyCache = void 0;\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError = void 0;\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments[1];\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass a single function as the first argument,\n * and get a function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if ((typeof actionCreators === 'undefined' ? 'undefined' : _typeof(actionCreators)) !== 'object' || actionCreators === null) {\n    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators === 'undefined' ? 'undefined' : _typeof(actionCreators)) + '. ' + 'Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?');\n  }\n\n  var keys = Object.keys(actionCreators);\n  var boundActionCreators = {};\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var actionCreator = actionCreators[key];\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n  return boundActionCreators;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\n\nfunction compose() {\n  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(undefined, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      var store = createStore.apply(undefined, args);\n      var _dispatch = function dispatch() {\n        throw new Error('Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(undefined, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(undefined, chain)(store.dispatch);\n\n      return _extends({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning(\"You are currently using minified code outside of NODE_ENV === 'production'. \" + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { createStore, combineReducers, bindActionCreators, applyMiddleware, compose, ActionTypes as __DO_NOT_USE__ActionTypes };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}